<?xml version="1.0" encoding="utf-8"?>
<rdf:RDF
    xmlns:py="http://genshi.edgewall.org/"
    xmlns:ecodp="http://ec.europa.eu/open-data/ontologies/ec-odp#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:foaf="http://xmlns.com/foaf/0.1/"
    xmlns:dct="http://purl.org/dc/terms/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:skos="http://www.w3.org/2004/02/skos/core#"
    xmlns:dcat="http://www.w3.org/ns/dcat#"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns="http://ec.europa.eu/open-data/ontologies/ec-odp-example#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:skos-xl="http://www.w3.org/2008/05/skos-xl#"
    xmlns:dcam="http://purl.org/dc/dcam/"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#">
<dcat:Dataset rdf:about="${ g.site_url + h.url_for(controller='package',action='read',id=c.pkg_dict['name'])}">

    <dct:title xml:lang="en">${c.pkg_dict['title']}</dct:title>
    <dct:description xml:lang="en">${c.pkg_dict.get('notes', '')}</dct:description>

    <dct:alternative xml:lang="en" py:if="c.pkg_dict.get('alternative_title')">${c.pkg_dict['alternative_title']}</dct:alternative>


<py:if test="c.pkg_dict.get('tags','')">
    <py:for each="tag_dict in c.pkg_dict['tags']">
    <dcat:keyword xml:lang="en">${ tag_dict["name"] }</dcat:keyword>
    </py:for>
</py:if>

    <dcat:record rdf:parseType="Resource">
        <dcat:accessURL rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">${ g.site_url + h.url_for(controller='package',action='read',id=c.pkg_dict['name'])}</dcat:accessURL>
        <dct:modified rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">${c.pkg_dict.get('modified_date','')}</dct:modified>
        <dct:issued rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">${c.pkg_dict.get('release_date','')}</dct:issued>
    </dcat:record>

    <dct:license py:if="c.pkg_dict.get('license_url', None)">
      <skos:Concept rdf:about="${c.pkg_dict['license_url']}"/>
    </dct:license>

    <dct:issued py:if="c.pkg_dict.get('release_date')" rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">${c.pkg_dict.get('release_date','')}</dct:issued>
    <dct:modified py:if="c.pkg_dict.get('modified_date','')"  rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">${c.pkg_dict.get('modified_date','')}</dct:modified>


    <ecodp:accrualPeriodicity py:if="c.pkg_dict.get('accrual_periodicity','') == 'other' and c.pkg_dict.get('accrual_periodicity-other','')" xml:lang="en">${c.pkg_dict['accrual_periodicity-other']}</ecodp:accrualPeriodicity>
    <ecodp:accrualPeriodicity py:if="c.pkg_dict.get('accrual_periodicity','') and c.pkg_dict.get('accrual_periodicity','') != 'other'" xml:lang="en">${c.pkg_dict['accrual_periodicity']}</ecodp:accrualPeriodicity>


    <dct:temporal py:if="c.pkg_dict.get('temporal_coverage_from', '') or c.pkg_dict.get('temporal_coverage_to', '') or c.temporal_granularity">
      <dct:PeriodOfTime rdf:about="http://ec.europa.eu/open-data/ontologies/ec-odp-example#PeriodExample">
        <ecodp:periodEnd test="c.pkg_dict.get('temporal_coverage_to', '')" rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">${c.pkg_dict.get('temporal_coverage_to', '')}</ecodp:periodEnd>
        <ecodp:periodStart test="c.pkg_dict.get('temporal_coverage_from', '')" rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">${c.pkg_dict.get('temporal_coverage_from', '')}</ecodp:periodStart>
      </dct:PeriodOfTime>
    </dct:temporal>

<py:if test="c.pkg_dict.get('geographical_coverage','')">
    <py:for each="tag,trans in c.pkg_dict['geographical_coverage']">
    <dct:spatial>
      <skos:Concept rdf:about="http://publications.europa.eu/resource/authority/ntu/${tag}"/>
    </dct:spatial>
    </py:for>
</py:if>

    <ecodp:contactPoint rdf:parseType="Resource">
        <foaf:phone py:if="c.pkg_dict.get('contact_telephone')" rdf:resource="${c.pkg_dict.get('contact_telephone')}"/>
        <foaf:mbox py:if="c.pkg_dict.get('contact_email')" rdf:resource="${c.pkg_dict.get('contact_email')}"/>
        <foaf:workplaceHomepage py:if="c.pkg_dict.get('contact_webpage')" rdf:resource="${c.pkg_dict.get('contact_webpage')}"/>
        <ecodp:contactAddress py:if="c.pkg_dict.get('contact_address')"  xml:lang="en">${c.pkg_dict.get('contact_address')}</ecodp:contactAddress>
        <foaf:name py:if="c.pkg_dict.get('contact_name')" xml:lang="en">${c.pkg_dict.get('contact_name')}</foaf:name>
    </ecodp:contactPoint>

  <dct:identifier py:if="c.pkg_dict.get('identifier')">${c.pkg_dict['identifier']}</dct:identifier>

    <ecodp:interoperabilityLevel py:if="c.pkg_dict.get('interoperability_level')">
      <skos:Concept rdf:about="${c.pkg_dict['interoperability_level']}"/>
    </ecodp:interoperabilityLevel>

    <py:for each="t in c.pkg_dict.get('type_of_dataset', [])">
      <ecodp:datasetType>
        <skos:Concept rdf:about="${t}"/>
      </ecodp:datasetType>
    </py:for>

    <py:for each="l in c.pkg_dict.get('language', [])">
        <dct:language>
            <skos:Concept rdf:about="${l}"/>
        </dct:language>
    </py:for>
    <dct:hasVersion rdf:parseType="Resource" py:if="c.pkg_dict.get('version_description')">
        <dct:identifier>${c.pkg_dict.get('version')}</dct:identifier>
        <dct:description xml:lang="en">${c.pkg_dict.get('version_description')}</dct:description>
    </dct:hasVersion>

    <ecodp:datasetStatus py:if="c.pkg_dict.get('status')">
      <skos:Concept rdf:about="${c.pkg_dict.get('status')}"/>
    </ecodp:datasetStatus>

   <dct:publisher py:if="c.pkg_dict.get('published_by')">
      <skos:Concept rdf:about="http://publications.europa.eu/resource/authority/corporate-body/${c.pkg_dict.get('published_by')}"/>
    </dct:publisher>


<py:for each="rsc_dict in c.pkg_dict.get('resources', [])">
    <py:choose test="rsc_dict.get('resource_type', '') in ['Feed','WebService', 'Download']">
        <py:when test="1">
          <dcat:distribution rdf:parseType="Resource">
                <dcat:accessURL py:if="rsc_dict.get('url','')"  rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">${rsc_dict.get('url','')}</dcat:accessURL>
                <rdf:type py:if="rsc_dict.get('type','')"    rdf:resource="http://www.w3.org/TR/vocab-dcat#${rsc_dict.get('type','')}"/>
                <ecodp:distributionFormat py:if="rsc_dict.get('format','')">${rsc_dict.get('format','')}</ecodp:distributionFormat>
                <dct:description xml:lang="en" py:if="rsc_dict.get('description','')">${rsc_dict.get('description','')}</dct:description>
                <dct:modified py:if="rsc_dict.get('created','')" rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">${rsc_dict.get('created','')}</dct:modified>
                <dct:issued py:if="rsc_dict.get('last_modified','')"  rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">${rsc_dict.get('last_modified','')}</dct:issued>
            </dcat:distribution>
        </py:when>
        <py:when test="0">
              <ecodp:isDocumentedBy rdf:parseType="Resource">
                    <ecodp:documentationType>
                      <skos:Concept rdf:about="rsc_dict.get('resource_type', '')"/>
                    </ecodp:documentationType>
                    <dcat:accessURL rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">${ rsc_dict.get('url','') }</dcat:accessURL>
                    <dct:title xml:lang="en">${ rsc_dict.get('description','') }</dct:title>
                </ecodp:isDocumentedBy>
        </py:when>
    </py:choose>
</py:for>

  </dcat:Dataset>
</rdf:RDF>
